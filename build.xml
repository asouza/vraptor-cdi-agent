<?xml version="1.0"?>
<project name="cdiagent" default="jar" basedir=".">
<!-- where the project source code is found -->
    <property name="src" location="src" />
    <property name="bin" location="bin" />
    <property name="extdir" location="lib" />
    <property name="jardir" location="jar" />
    <property name="firstVersionOfJarFile" location="${jardir}/depencies.jar" />        
    <property name="jarfile" location="${jardir}/${ant.project.name}.jar" />        
    <property name="tempsrcdir" location="tempsrc"/>
    <property name="myname" value="${user.name}" />
    <property file="build.properties" />
       
    <!-- Delete old temporary dirs and creates new dirs -->
    <target name="init">
        <tstamp>
              <format property="compiletime" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>
        <echo message="creating build.properties"/>
        <delete dir="${jardir}" />
        <delete dir="${tempsrcdir}" />
        <delete dir="${bin}"/>
        <mkdir dir="${jardir}" />
        <mkdir dir="${tempsrcdir}" />
        <mkdir dir="${bin}"/>
    </target>

    <!-- Copy source files to a new directory.  I originally needed to do -->
    <!-- this because I did a substitution on the source code that put the-->
    <!-- name of the person compiling the code into the source.           -->
    <target name="copyfiles" depends="init">
        <copy todir="${tempsrcdir}" filtering="true">
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
        </copy>
        <echo message="copied source files"/>
    </target>
 
    <!-- Compile.  The classpath is set to include the external jars      -->
    <!-- mentioned in my previous blog about ImageJ plugin development.   -->
    <target name="compile" depends="init,copyfiles" description="compile classes">
        <javac destdir="${bin}" srcdir="${tempsrcdir}" classpath="${extdir}/javax.inject-1.jar:${extdir}/javassist-3.12.1.GA.jar:${extdir}/spring-beans-3.0.6.RELEASE.jar:${extdir}/vraptor-3.5.0-SNAPSHOT.jar">
        </javac>
    </target>
        
    <!-- Build the jar.  The important step here is the zipgroupfileset   -->
    <!-- which unpacks all my external jars and bundles them into the jar --> 
    <!-- we are building. The plugins.config file is for ImageJ plugins.  -->
    <!-- You would typically set the <manifest> here with something like  -->
    <!-- <attribute name="Main-Class" value="your.main.class"/>           -->
    <target name="jar" depends="init,copyfiles,compile" description="build jar">
           <jar destfile="${firstVersionOfJarFile}">
              <zipgroupfileset dir="${extdir}"  includes="**/*.jar"/>                                      
           </jar>
        <sleep seconds="1"/>
        <jar destfile="${jarfile}">
              <fileset dir="${bin}">
                <include name="**/*.class"/>
              </fileset>
<!--               <zipgroupfileset dir="${extdir}"  include="**/*.jar"/>                                       -->
			<zipfileset src="${firstVersionOfJarFile}">
			    <exclude name="**/beans.xml"/>
			    <exclude name="**/maven"/>
			    <exclude name="**/services"/>
			    <exclude name="**/web-fragment.xml"/>
			    <exclude name="**/*.tooling"/>
			    <exclude name="**/*.schemas"/>
			    <exclude name="**/*.handlers"/>
			    <exclude name="**/INDEX.LIST"/>
			    
			</zipfileset>			   
			
			<manifest>
				<attribute name="Premain-Class" value="br.com.caelum.vraptor.cdi.agent.CDIClassTransformer"/>
				<attribute name="Can-Redefine-Classes" value="true"/>
			</manifest>            
        </jar>
     </target>

     <!-- Clean up jar and other temp directories -->
    <target name="clean" description="delete all generated files">
        <delete dir="${jardir}" quiet="true"/>
        <delete dir="${tempsrcdir}" quiet="true"/>
        <delete dir="${bin}" quiet="true"/>
    </target>
 </project>